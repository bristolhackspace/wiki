a:33:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"Code Snippets";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:30;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:4:"Note";i:1;i:5;i:2;i:30;}i:2;i:30;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:30;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:30;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:153:"We now have a repository on github.com for all our code. Check there first for a later version of any of the following. You can access the repository at ";}i:2;i:42;}i:8;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:35:"https://github.com/bristolhackspace";i:1;s:35:"Bristol Hackspace GitHub Repository";}i:2;i:195;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:270;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:270;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:"Useful code you want to share - embedded, links to github, or however you like";}i:2;i:272;}i:12;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:350;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:353;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:354;}i:15;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:354;}i:16;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:354;}i:17;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:354;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:358;}i:19;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:12:"Waiter class";i:1;N;}i:2;i:359;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" - A class for doing non-blocking delays on Arduino.";}i:2;i:375;}i:21;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:427;}i:22;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:427;}i:23;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:427;}i:24;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:427;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:431;}i:26;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:16:"Plotter Programs";i:1;N;}i:2;i:432;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:" - A selection of programs in C to generate HPGL for the flat-bed pen plotter";}i:2;i:452;}i:28;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:529;}i:29;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:529;}i:30;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:529;}i:31;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:530;}i:32;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:530;}}