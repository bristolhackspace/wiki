===OpenSCAD workshop plans===


=== preparation ===

  * install openscad on your pc and check you can render an example or two. Pick a release for your platform from here http://www.openscad.org/
  * Matt and Jon to bring examples.

=== timing & costs ===

  * Tuesday 29th Jan
  * get to the hackspace at 6.30 for a 7pm start. Finish at 9pm.
  * Map: http://maps.google.com/maps?q=51.442974,%20-2.593308%20%28Bristol%20Hackspace%29&z=18
  * hackspace members free
  * Â£3 non members

=== overview ===

  * introduction to openscad and why you'd use it
  * Matt faciliates beginners to get started and make something to print
  * Jon works with more advanced people/projects
  * tolerances, dimensions, units. What is your target manufacturing technique? preparing for printing/cutting.
  * https://github.com/SolidCode/MCAD ?
  * printing some of the objects on our 3d printer (depends on availability/workingness)
  * Q&A at the end

===Feedback on what people want===

Chris Wallace - http://kitwallace.posterous.com/openscad-and-3-d-printing

One challenge I guess we all face is how to construct objects using the available primitives and operators. Maybe one starts with a 'carpentry' style,gluing disjoint objects with union() and chiselling and drilling out waste using difference().  What I find was more challenging is using union() with overlapping objects, using intersection() and more exotic operators minkowski() and hull(). Understanding what the operator does is not the same as being able to use it in construction.  One feature I find very useful is animation. The blog shows a use of animation to explore the space of objects generated by a parameterised module, in thus case  solids generated using intersections.  Another issue  is overcoming the inability to create vectors dynamically, leading to the need to generate scad from a more expressive language like python.  I haven't looked at ways to generate DXF (or scad) suitable to use with extrude but that's something I'll need to do.

I'm puttng any designs worth  keeping up on github https://github.com/KitWallace/openscad

Mike:

We're hopefully going to run an OpenSCAD workshop at Brighton Hackspace sometime soon too. It'd be really useful to us if you could publish your training material on Github or similar, so we can build on that rather than reinventing the wheel!


Eric:
I just want to get a good foundation with the program and get an idea of it's capabilities.